#-----------------------------------------------------------------
#
#	Freeiris2 -- An Opensource telephony project.
#	Copyright (C) 2005 - 2009, Sun bing.
#	Sun bing <hoowa.sun@gmail.com>
#
#	See http://www.freeiris.org for more information about
#	the Freeiris project.
#
#	This program is free software, distributed under the terms of
#	the GNU General Public License Version 2. See the LICENSE file
#	at the top of the source tree.
#
#	Freeiris2 -- 开源通信系统
#	本程序是自由软件，以GNU组织GPL协议第二版发布。关于授权协议内容
#	请查阅LICENSE文件。
#
#-----------------------------------------------------------------
#
#  freeiris2
#
#  Sun bing <hoowa.sun@gmail.com>
#
# syntax: agi://127.0.0.1/dial_local?&callednum=[?]......
# args:
# callednum    number[must be request]
# typeof    type of number we hope
# voicemail    does enable diallocal_failed?
# dialargs    dial args
#
#-----------------------------------------------------------------

# 说明主函数
sub dial_local_gpl_license(){return("dial the local number");}


# 主函数
#
# 内线拨号
#
#
sub dial_local
{
my	$self = shift;
my	$AGI = $self->{server}{agi};				#Asterisk::AGI object
my	$INPUT = $self->{server}{input};			#Extension input
my	$PARAM = $self->{server}{params};			#Call params
my	$FRI2CONF = $self->{server}->{fri2conf};	#Freeiris2 general conf
my	$DBH = $self->database_pconnect();			#DBI object

	#create and get sessionid and set action
#my	$FRI2_SESSIONID = $self->_callsession('action=local','number='.$PARAM->{'callednum'});
my	$MYSESS = $self->_callsession('dial_local');
my	$FRI2_SESSIONID = $MYSESS->{'FRI2_SESSIONID'};
	$self->_callsession_set($MYSESS->{ACTID},'number',$PARAM->{'callednum'});

	#找到这个号码类型
my	$sth = $DBH->prepare("select * from localnumber where number = '".$PARAM->{'callednum'}."'");
	$sth->execute;
my	$row = $sth->fetchrow_hashref();
	$sth->finish;
	#不是分机
	if (!$row) {
        $self->_callsession_set($MYSESS->{ACTID},'localnumber=','unreachable');
		exit;
	}


	#设置参数
my	($def_typeof,$def_voicemail,$def_dialargs);
	if (!defined $PARAM->{'typeof'}) {
		$def_typeof = '';
	} else {
		$def_typeof = $PARAM->{'typeof'};
	}
	if (!defined $PARAM->{'voicemail'}) {
		$def_voicemail = 'yes';
	} else {
		$def_voicemail = $PARAM->{'voicemail'};
	}
	if (!defined $PARAM->{'dialargs'}) {
		$def_dialargs = $FRI2CONF->{'fastagi'}{'dial_addional'};
	} else {
		$def_dialargs = $PARAM->{'dialargs'};
	}


	#分机类型分机
	if ($row->{'typeof'} eq 'extension' && ($def_typeof eq 'extension' || $def_typeof eq '')) {

		#如果这个被叫默认启动自动录音,那么就启动
		$AGI->exec('AGI','agi://127.0.0.1/sysautomon?type=callee&number='.$PARAM->{'callednum'});

		#记录当前呼叫方法
		#$self->_callsession('action=local_extension','local_extension='.$PARAM->{'callednum'});
		$self->_callsession_set($MYSESS->{ACTID},'typeof','extension');

		#记录PICKUPMARK
		$AGI->exec('set','__PICKUPMARK='.$PARAM->{'callednum'});

		#具体查找分机类型
	my	$sth = $DBH->prepare("select * from extension where devicenumber = '".$PARAM->{'callednum'}."'");
		$sth->execute;
	my	$row = $sth->fetchrow_hashref();
		$sth->finish;
		if ($row->{deviceproto} eq 'custom') {
			$AGI->exec('dial',$row->{devicestring}.'|'.$FRI2CONF->{'fastagi'}{'dial_ringtime'}.'|'.$def_dialargs);
		} elsif ($row->{deviceproto} eq 'fxs') {
			$AGI->exec('dial','DAHDI/'.$row->{devicestring}.'|'.$FRI2CONF->{'fastagi'}{'dial_ringtime'}.'|'.$def_dialargs);
		} else {
			$AGI->exec('dial',$row->{deviceproto}.'/'.$row->{devicestring}.'|'.$FRI2CONF->{'fastagi'}{'dial_ringtime'}.'|'.$def_dialargs);
		}

		#检测是否呼叫失败
		$self->_dial_local_failed($AGI->get_variable('DIALSTATUS'),$def_voicemail);

	#电话会议类型分机
	} elsif ($row->{'typeof'} eq 'conference' && ($def_typeof eq 'conference' || $def_typeof eq '')) {

		#记录当前呼叫方法
		#$self->_callsession('action=local_conference','local_extension='.$PARAM->{'callednum'});
		$self->_callsession_set($MYSESS->{ACTID},'typeof','conference');

		#具体查找会议
	my	$sth = $DBH->prepare("select * from conference where confno = '".$PARAM->{'callednum'}."'");
		$sth->execute;
	my	$row = $sth->fetchrow_hashref();
		$sth->finish;
	my	$meetopt='dFP';
		if ($row->{'playwhenevent'} ne '1') {
			$meetopt.='q';
		}
		if ($row->{'mohwhenonlyone'} eq '1') {
			$meetopt.='M';
		}
		$AGI->exec('MeetMe',$row->{'confno'}.'|'.$meetopt.'|'.$row->{'pincode'});

	#呼叫队列会议类型分机
	} elsif ($row->{'typeof'} eq 'queue' && ($def_typeof eq 'queue' || $def_typeof eq '')) {

		#记录当前呼叫方法
		#$self->_callsession('action=local_queue','local_queue='.$PARAM->{'callednum'});
		$self->_callsession_set($MYSESS->{ACTID},'typeof','queue');

		#查找
	my	$sth = $DBH->prepare("select * from queue where queuenumber = '".$PARAM->{'callednum'}."'");
		$sth->execute;
	my	$row = $sth->fetchrow_hashref();
		$sth->finish;
	my	$opt='t';
		if ($row->{'playring'} ne '0') {
			$opt.='r';
		}

		if ($AGI->exec('Queue',$row->{'queuenumber'}.'|'.$opt.'||'.$row->{'announce'}.'|'.$row->{'queuetimeout'}.'|'.'agi://127.0.0.1/queue_answeragent?saymember='.$row->{'saymember'})) {
		#无人接通
		} elsif ($row->{'failedon'} ne '') {
			$AGI->exec('AGI','agi://127.0.0.1/dial_local?&typeof=extension&dialargs=tk&callednum='.$row->{'failedon'});
		}

	#呼叫队列会议类型分机
	} elsif ($row->{'typeof'} eq 'ivr' && ($def_typeof eq 'ivr' || $def_typeof eq '')) {

		#记录当前呼叫方法
		#$self->_callsession('action=local_ivrmenu','local_ivrmenu='.$PARAM->{'callednum'});
		$self->_callsession_set($MYSESS->{ACTID},'typeof','ivrmenu');

		$AGI->exec('AGI','agi://127.0.0.1/ivrmenu?ivrnumber='.$PARAM->{'callednum'});


	#执行AGI特别程序
	} elsif ($row->{'typeof'} eq 'agi' && ($def_typeof eq 'agi' || $def_typeof eq '')) {

#		if ($INPUT->{accountcode} && $INPUT->{accountcode} ne '') {
#		my	$app = $row->{'assign'};
#
#			$app =~ s/\$VOICEMAILNUMBER/$INPUT->{accountcode}/ if ($app =~ /\$VOICEMAILNUMBER/);
#			$app =~ s/\$ACCOUNTCODE/$INPUT->{accountcode}/ if ($app =~ /\$ACCOUNTCODE/);
#			
#			$AGI->exec('AGI',$app);
#		
#		}
		foreach  (($row->{'assign'} =~ /\$([a-zA-Z0-9]+)/g)) {
			#AGI环境变量
			if ($INPUT->{$_}) {
				$row->{'assign'} =~ s/\$$_/$INPUT->{$_}/;
			#CALLSESSIONID专用变量
			} elsif ($_ eq 'callsessionid') {
				$row->{'assign'} =~ s/\$$_/$FRI2_SESSIONID/;
			#自定义变量(TEXT模式)
			} elsif ($_ ne '') {
				my	$userdefined = $AGI->get_variable('FRI2_IVRTEXT_'.$_);
				$row->{'assign'} =~ s/\$$_/$userdefined/ if (defined$userdefined);
			}
		}

		#记录当前呼叫方法
		$self->_callsession_set($MYSESS->{ACTID},'typeof','agi');
		$self->_callsession_set($MYSESS->{ACTID},'agi',$row->{'assign'});

		$AGI->exec('AGI',$row->{'assign'});

	}

exit;
}


sub _dial_local_failed
{
my	$self = shift;
my	$DIALSTATUS=shift;
my	$def_voicemail=shift;
my	$AGI = $self->{server}{agi};				#Asterisk::AGI object
my	$INPUT = $self->{server}{input};			#Extension input
my	$PARAM = $self->{server}{params};			#Call params
my	$FRI2CONF = $self->{server}->{fri2conf};	#Freeiris2 general conf
my	$DBH = $self->database_pconnect();			#DBI object

use	Asterisk::Manager;	#连接AMI库

	#取出用户定义的错误处理方式
my	($diallocal_failed,$transfernumber);
my	$sth = $DBH->prepare("select diallocal_failed,transfernumber from extension where accountcode = '".$PARAM->{'callednum'}."'");
	$sth->execute;
my	$row = $sth->fetchrow_hashref();
	$sth->finish;
	if ($row->{'diallocal_failed'} ne '') {
		$diallocal_failed=$row->{'diallocal_failed'};
	} else {
		$diallocal_failed=$FRI2CONF->{'fastagi'}{'diallocal_failed'};
	}
	$transfernumber=$row->{'transfernumber'};

	#如果呼叫失败后选择的是呼叫转移模式
	if ($DIALSTATUS && $DIALSTATUS ne 'ANSWER' && $def_voicemail eq 'yes' && $diallocal_failed eq 'failedtransfer') {

		#create and get sessionid and set action
	my	$MYSESS = $self->_callsession('dial_localfailed');
	my	$FRI2_SESSIONID = $MYSESS->{'FRI2_SESSIONID'};
		$self->_callsession_set($MYSESS->{ACTID},'status',$DIALSTATUS);
		$self->_callsession_set($MYSESS->{ACTID},'redirect',$transfernumber); #记录事件

		#转移的号码存在
		if (defined$transfernumber && $transfernumber ne '') {
			$AGI->exec('goto','app-exten|'.$transfernumber.'|1');
			exit;
		}

	#如果呼叫失败进入呼叫失败后异常处理阶段
	} elsif ($DIALSTATUS && $DIALSTATUS ne 'ANSWER' && $def_voicemail eq 'yes') {
		
		#create and get sessionid and set action
	my	$MYSESS = $self->_callsession('dial_localfailed');
	my	$FRI2_SESSIONID = $MYSESS->{'FRI2_SESSIONID'};
		$self->_callsession_set($MYSESS->{ACTID},'status',$DIALSTATUS);
		$self->_callsession_set($MYSESS->{ACTID},'failedto',$diallocal_failed);	#记录事件

		#先应答
		$AGI->exec('Answer');
		
		#--------------------------------------------------------------------对方繁忙异常
		if ($DIALSTATUS eq 'BUSY') {

			#执行IVR
			if ($diallocal_failed eq 'ivr') {
			my	$retrycount=0;
				while (1) {
					#允许最多尝试6次
					$retrycount++;
					exit if ($retrycount > 6);

					#播放提示选择,接受输入
				my	($playbackvoice,$choose);
					if ($FRI2CONF->{fax}{enablefaxivr} eq 'yes') {
						$playbackvoice='freeiris/fax-localnumber-busy';
					} else {
						$playbackvoice='freeiris/localnumber-busy';
					}
					$choose = $AGI->get_data($playbackvoice,5000,1);

					#选择重试
					if ($choose eq '1') {
						$AGI->exec('AGI',$INPUT->{'request'});
						exit;

					#选择拨打其他号码
					} elsif ($choose eq '2') {

						#receive input
						$AGI->exec('playback','freeiris/inputnumber');
					my	($receive);
						for (my $i=0;$i<=30 ;$i++) {
						my	$char = $AGI->wait_for_digit(5000);

							#发现输入#就表示终止输入
							if ($char && $char == 35) {
								last;
							}
							#输入内容是否合法
							if ($char && $char > 0) {
								$receive .= pack("C",$char);
							}

							#默认最长只允许输入4位
							if (length($receive) == 4) {
								#拨号前先分析这个号码是否本地号码.如果不是就进入条转IVR
							my	$sth = $DBH->prepare("select * from localnumber where number = '".$receive."'");
								$sth->execute;
							my	$row = $sth->fetchrow_hashref();
								$sth->finish;
								#号码存在
								if ($row->{'number'} && $row->{'number'} ne '') {
									$AGI->exec('AGI','agi://127.0.0.1/dial_local?&typeof='.$row->{'typeof'}.'&callednum='.$receive);
									exit;
								} else {
									$AGI->exec('playback','freeiris/invalid');
									$AGI->exec('playback','freeiris/inputnumber');
									$receive='';
									next;
								}
							}
						}

					#选择进入语音信箱
					} elsif ($choose eq '3') {
						$self->voicemail($PARAM->{'callednum'});
						last;

					#选择进入FAX传真
					} elsif ($choose eq '4') {
						$AGI->exec('goto','app-receivefax|'.$PARAM->{'callednum'}.'|1');
						exit;

					#其他选择重新循环
					} else {
						next;
					}

				}


			#进入vm
			} elsif ($diallocal_failed eq 'voicemail' && $FRI2CONF->{'voicemail'}{'enable'} eq 'true') {
				$self->voicemail($PARAM->{'callednum'});

			#进入Fax传真系统
			} elsif ($diallocal_failed eq 'fax') {

				$AGI->exec('goto','app-receivefax|'.$PARAM->{'callednum'}.'|1');
				exit;

			#不处理
			} else {
			}

		#--------------------------------------------------------------------对方其他错误
		} else {
			#执行IVR
			if ($diallocal_failed eq 'ivr') {
			my	$retrycount=0;
				while (1) {
					#允许最多尝试6次
					$retrycount++;
					exit if ($retrycount > 6);

					#播放提示选择,接受输入
				my	($playbackvoice,$choose);
					if ($FRI2CONF->{fax}{enablefaxivr} eq 'yes') {
						$playbackvoice='freeiris/fax-localnumber-noanswer';
					} else {
						$playbackvoice='freeiris/localnumber-noanswer';
					}
					$choose = $AGI->get_data($playbackvoice,5000,1);

					#选择重试
					if ($choose eq '1') {
						$AGI->exec('AGI',$INPUT->{'request'});
						exit;

					#选择拨打其他号码
					} elsif ($choose eq '2') {

						#receive input
						$AGI->exec('playback','freeiris/inputnumber');
					my	($receive);
						for (my $i=0;$i<=30 ;$i++) {
						my	$char = $AGI->wait_for_digit(5000);

							#发现输入#就表示终止输入
							if ($char && $char == 35) {
								last;
							}
							#输入内容是否合法
							if ($char && $char > 0) {
								$receive .= pack("C",$char);
							}

							#默认最长只允许输入4位
							if (length($receive) == 4) {
								#拨号前先分析这个号码是否本地号码.如果不是就进入条转IVR
							my	$sth = $DBH->prepare("select * from localnumber where number = '".$receive."'");
								$sth->execute;
							my	$row = $sth->fetchrow_hashref();
								$sth->finish;
								#号码存在
								if ($row->{'number'} && $row->{'number'} ne '') {
									$AGI->exec('AGI','agi://127.0.0.1/dial_local?&typeof='.$row->{'typeof'}.'&callednum='.$receive);
									exit;
								} else {
									$AGI->exec('playback','freeiris/invalid');
									$AGI->exec('playback','freeiris/inputnumber');
									$receive='';
									next;
								}
							}
						}

					#选择进入语音信箱
					} elsif ($choose eq '3') {
						$self->voicemail($PARAM->{'callednum'});
						last;

					#选择进入FAX传真
					} elsif ($choose eq '4') {
						$AGI->exec('goto','app-receivefax|'.$PARAM->{'callednum'}.'|1');
						exit;

					#其他选择重新循环
					} else {
						next;
					}

				}


			#进入vm
			} elsif ($diallocal_failed eq 'voicemail' && $FRI2CONF->{'voicemail'}{'enable'} eq 'true') {
				$self->voicemail($PARAM->{'callednum'});

			#进入Fax传真系统
			} elsif ($diallocal_failed eq 'fax' && $FRI2CONF->{'voicemail'}{'enable'} eq 'true') {

				$AGI->exec('goto','app-receivefax|'.$PARAM->{'callednum'}.'|1');
				exit;

			#不处理
			} else {
			}

		}

	}

return(1);
}
